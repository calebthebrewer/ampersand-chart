;(function() {
  var d3 = require('d3');
  var _ = require('lodash');

  var AmpersandState = require('ampersand-state');
  var AmpersandView = require('ampersand-view');
  var AmpersandCollection = require('ampersand-collection');

  var ChartState = AmpersandState.extend({
    session: {
      data: 'array',
      title: 'string',
      value: 'string',
      label: 'string'
    }
  });

  var ChartView = AmpersandView.extend({
    template: '<svg></svg>',
    autoRender: true,
    render: function() {
      AmpersandView.prototype.render.call(this);

      this.renderChart();
    },
    renderChart: function() {    
      var data = this.model.data;

      var width = 600;
      var height = 420;
      var barWidth = 25; 
      var barMargin = 30;

      var y = d3.scale.linear()
        .domain([ 0, d3.max(data, function(d) {
          return d.pies;
        }) ])
        .range([ height - 100, 0 ]);

      var chart = d3.select(this.el)
        .attr('width', width)
        .attr('height', height);

      var bar = chart.selectAll('g')
        .data(data)
      .enter().append('g')
        .attr('transform', function(d, i) {
          return 'translate(' + (i * (barWidth + barMargin) + 100) + ',0)';
        });

      bar.append('rect')
        .attr('class', 'bar-background')
        .attr('y', 0)
        .attr('height', height - 100)
        .attr('width', barWidth);

      bar.append('rect')
        .attr('y', function(d) { return y(d.pies); })
        .attr('height', function(d) { return height - 100 - y(d.pies); })
        .attr('width', barWidth);

      bar.append('text')
        .attr('x', barWidth / 2)
        .attr('y', height - 100)
        .attr('dy', '1.25em')
        .attr('dx', '0.5em')
        .text(function(d) { return d.pizza; });
      
      var ground = chart.append('g')
        .append('line')
          .attr('class', 'ground')
          .attr('x1', 100 - barWidth / 2)
          .attr('x2', (data.length - 1) * (barWidth + barMargin) + barWidth * 1.5 + 100)
          .attr('y1', height - 100)
          .attr('y2', height - 100);
    }
  });

  module.exports = {
    State: ChartState,
    View: ChartView
  };
})();
